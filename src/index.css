/* src/index.css */

:root {
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #333;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

body {
  margin: 0;
  min-width: 320px;
}

#root {
    height: 100vh;
    display: flex;
    flex-direction: column;
}

.App {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
}

/* --- MODIFIED --- */
/*
 * This is the key to the fix. We are ensuring the main element acts as a strict container.
 * 1. `display: flex` and `flex-direction: column` make it a vertical flex container.
 * 2. `flex-grow: 1` ensures it expands to fill all available space left by the header.
 * 3. `overflow: hidden` is the crucial property. It prevents this element from ever becoming
 * larger than the space it is allocated. This contains both the scrollable deck view and
 * the fixed-size game board, ensuring a clean switch between them without the layout breaking.
 */
main {
    flex-grow: 1;
    display: flex;
    flex-direction: row; /* Changed to arrange content and preview side-by-side */
    overflow: hidden;
}


h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}